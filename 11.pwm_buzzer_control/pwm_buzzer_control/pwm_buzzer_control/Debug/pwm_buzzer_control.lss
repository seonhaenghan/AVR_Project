
pwm_buzzer_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000110  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ce2  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000939  00000000  00000000  00000f1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000048a  00000000  00000000  00001857  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  00001ce4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c7  00000000  00000000  00001d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003bc  00000000  00000000  00002257  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002613  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	02 d0       	rcall	.+4      	; 0xb8 <main>
  b4:	2b c0       	rjmp	.+86     	; 0x10c <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <main>:
// 16bit Timer/Counter
// OCR3AÍ∞íÏù¥ Í∞ôÏïÑÏßÄÎ©¥ Low Ï∂úÎ†•.

int main(void)
{
	init_speaker();	
  b8:	02 d0       	rcall	.+4      	; 0xbe <init_speaker>

	while(1)
	{
		Beep();
  ba:	0d d0       	rcall	.+26     	; 0xd6 <Beep>
  bc:	fe cf       	rjmp	.-4      	; 0xba <main+0x2>

000000be <init_speaker>:
  be:	87 b3       	in	r24, 0x17	; 23
	return;
}  
// Timer3 ¿ßªÛ±≥¡§ PWM
void init_speaker(void)
{
	DDRB |= 0x20;   // PWM CHANNEL  OC3A(PE3) √‚∑¬ ∏µÂ∑Œ º≥¡§ «—¥Ÿ. 
  c0:	80 62       	ori	r24, 0x20	; 32
  c2:	87 bb       	out	0x17, r24	; 23
	TCCR1A = (1<<COM1A0); // COM3A0 : ∫Ò±≥¿œƒ°Ω√ PE3 √‚∑¬ π›¿¸ (P328 «•14-6 ¬¸∞Ì)
  c4:	80 e4       	ldi	r24, 0x40	; 64
  c6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM12) | (1<<CS11);   // WGM32 : CTC 4(P327 «•14-5) CS31: 8∫–¡÷(P318)
  c8:	8a e0       	ldi	r24, 0x0A	; 10
  ca:	8e bd       	out	0x2e, r24	; 46
	// up-dounting: ∫Ò±≥¿œƒ°Ω√ LOW, down-countingΩ√ HIGH√‚∑¬
	// 1/2000000 ==> 0.0000005sec (0.5us)
	// P599 TOP ∞™ ∞ËªÍ ¬¸∞Ì
	// fPWM(PWM¡÷∆ƒºˆ) = fOSC(16M) / ( 2(up.down)x N(∫–¡÷¿≤)xTOP ) 
	// TOP =  fOSC(16M) / (  2(up.down)x N(∫–¡÷¿≤)x ø¯«œ¥¬¡÷∆ƒºˆ)
	TCCR1C = 0;  // P328 ±◊∏≤ 14-11 ¬¸∞Ì 
  cc:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	OCR1A = 0;   // ∫Ò±≥ ¿œƒ°∞™¿ª OCR3Aø° ≥÷¥¬¥Ÿ. 
  d0:	1b bc       	out	0x2b, r1	; 43
  d2:	1a bc       	out	0x2a, r1	; 42
  d4:	08 95       	ret

000000d6 <Beep>:
}

void Beep(void)
{
	
	OCR3A = 1276;  // 0.00025sec (250us)
  d6:	e6 e8       	ldi	r30, 0x86	; 134
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	8c ef       	ldi	r24, 0xFC	; 252
  dc:	94 e0       	ldi	r25, 0x04	; 4
  de:	91 83       	std	Z+1, r25	; 0x01
  e0:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	83 ec       	ldi	r24, 0xC3	; 195
  e6:	99 e0       	ldi	r25, 0x09	; 9
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <Beep+0x12>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <Beep+0x1c>
  f2:	00 00       	nop
	_delay_ms(200);
	OCR3A = 0;
  f4:	11 82       	std	Z+1, r1	; 0x01
  f6:	10 82       	st	Z, r1
  f8:	2f ef       	ldi	r18, 0xFF	; 255
  fa:	83 ec       	ldi	r24, 0xC3	; 195
  fc:	99 e0       	ldi	r25, 0x09	; 9
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <Beep+0x28>
 106:	00 c0       	rjmp	.+0      	; 0x108 <Beep+0x32>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <_exit>:
 10c:	f8 94       	cli

0000010e <__stop_program>:
 10e:	ff cf       	rjmp	.-2      	; 0x10e <__stop_program>
