
INT_MIN_SEC_WATCH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800100  00000982  00000a16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000982  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d4  0080013e  0080013e  00000a54  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c7e  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001123  00000000  00000000  000028fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e92  00000000  00000000  00003a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000034c  00000000  00000000  000048b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083c  00000000  00000000  00004bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005ef  00000000  00000000  00005438  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005a27  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	e0 c1       	rjmp	.+960    	; 0x402 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	65 c3       	rjmp	.+1738   	; 0x714 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e8       	ldi	r30, 0x82	; 130
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 33       	cpi	r26, 0x3E	; 62
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	ae e3       	ldi	r26, 0x3E	; 62
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 31       	cpi	r26, 0x12	; 18
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1c d2       	rcall	.+1080   	; 0x4fc <main>
  c4:	5c c4       	rjmp	.+2232   	; 0x97e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_button>:
  c8:	81 b3       	in	r24, 0x11	; 17
  ca:	8f 70       	andi	r24, 0x0F	; 15
  cc:	81 bb       	out	0x11, r24	; 17
  ce:	08 95       	ret

000000d0 <get_button1>:
  d0:	80 b3       	in	r24, 0x10	; 16
  d2:	80 71       	andi	r24, 0x10	; 16
  d4:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <prev_state.1735>
  d8:	91 11       	cpse	r25, r1
  da:	11 c0       	rjmp	.+34     	; 0xfe <get_button1+0x2e>
  dc:	88 23       	and	r24, r24
  de:	79 f0       	breq	.+30     	; 0xfe <get_button1+0x2e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	8d ee       	ldi	r24, 0xED	; 237
  e4:	92 e0       	ldi	r25, 0x02	; 2
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <get_button1+0x16>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <get_button1+0x20>
  f0:	00 00       	nop
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <prev_state.1735>
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	08 95       	ret
  fe:	91 30       	cpi	r25, 0x01	; 1
 100:	81 f4       	brne	.+32     	; 0x122 <get_button1+0x52>
 102:	81 11       	cpse	r24, r1
 104:	11 c0       	rjmp	.+34     	; 0x128 <get_button1+0x58>
 106:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <prev_state.1735>
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	86 e7       	ldi	r24, 0x76	; 118
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	21 50       	subi	r18, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <get_button1+0x40>
 118:	00 c0       	rjmp	.+0      	; 0x11a <get_button1+0x4a>
 11a:	00 00       	nop
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	08 95       	ret
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	08 95       	ret
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	08 95       	ret

0000012e <get_button2>:
 12e:	80 b3       	in	r24, 0x10	; 16
 130:	80 72       	andi	r24, 0x20	; 32
 132:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <prev_state.1739>
 136:	91 11       	cpse	r25, r1
 138:	11 c0       	rjmp	.+34     	; 0x15c <get_button2+0x2e>
 13a:	88 23       	and	r24, r24
 13c:	79 f0       	breq	.+30     	; 0x15c <get_button2+0x2e>
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	8d ee       	ldi	r24, 0xED	; 237
 142:	92 e0       	ldi	r25, 0x02	; 2
 144:	21 50       	subi	r18, 0x01	; 1
 146:	80 40       	sbci	r24, 0x00	; 0
 148:	90 40       	sbci	r25, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <get_button2+0x16>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <get_button2+0x20>
 14e:	00 00       	nop
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <prev_state.1739>
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	08 95       	ret
 15c:	91 30       	cpi	r25, 0x01	; 1
 15e:	81 f4       	brne	.+32     	; 0x180 <get_button2+0x52>
 160:	81 11       	cpse	r24, r1
 162:	11 c0       	rjmp	.+34     	; 0x186 <get_button2+0x58>
 164:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <prev_state.1739>
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	86 e7       	ldi	r24, 0x76	; 118
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <get_button2+0x40>
 176:	00 c0       	rjmp	.+0      	; 0x178 <get_button2+0x4a>
 178:	00 00       	nop
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	08 95       	ret
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	08 95       	ret
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	08 95       	ret

0000018c <get_button3>:
 18c:	80 b3       	in	r24, 0x10	; 16
 18e:	80 74       	andi	r24, 0x40	; 64
 190:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <__data_end>
 194:	91 11       	cpse	r25, r1
 196:	11 c0       	rjmp	.+34     	; 0x1ba <get_button3+0x2e>
 198:	88 23       	and	r24, r24
 19a:	79 f0       	breq	.+30     	; 0x1ba <get_button3+0x2e>
 19c:	2f ef       	ldi	r18, 0xFF	; 255
 19e:	8d ee       	ldi	r24, 0xED	; 237
 1a0:	92 e0       	ldi	r25, 0x02	; 2
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <get_button3+0x16>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <get_button3+0x20>
 1ac:	00 00       	nop
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <__data_end>
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	08 95       	ret
 1ba:	91 30       	cpi	r25, 0x01	; 1
 1bc:	81 f4       	brne	.+32     	; 0x1de <get_button3+0x52>
 1be:	81 11       	cpse	r24, r1
 1c0:	11 c0       	rjmp	.+34     	; 0x1e4 <get_button3+0x58>
 1c2:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <__data_end>
 1c6:	2f ef       	ldi	r18, 0xFF	; 255
 1c8:	86 e7       	ldi	r24, 0x76	; 118
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	21 50       	subi	r18, 0x01	; 1
 1ce:	80 40       	sbci	r24, 0x00	; 0
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <get_button3+0x40>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <get_button3+0x4a>
 1d6:	00 00       	nop
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	08 95       	ret
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	08 95       	ret
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	08 95       	ret

000001ea <set_fnd_data>:
 1ea:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <fnd_data+0x1>
 1ee:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <fnd_data>
 1f2:	08 95       	ret

000001f4 <get_fnd_data>:
 1f4:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <fnd_data>
 1f8:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <fnd_data+0x1>
 1fc:	08 95       	ret

000001fe <display_fnd>:
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	cd b7       	in	r28, 0x3d	; 61
 204:	de b7       	in	r29, 0x3e	; 62
 206:	2a 97       	sbiw	r28, 0x0a	; 10
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	f8 94       	cli
 20c:	de bf       	out	0x3e, r29	; 62
 20e:	0f be       	out	0x3f, r0	; 63
 210:	cd bf       	out	0x3d, r28	; 61
 212:	8a e0       	ldi	r24, 0x0A	; 10
 214:	ee e0       	ldi	r30, 0x0E	; 14
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	de 01       	movw	r26, r28
 21a:	11 96       	adiw	r26, 0x01	; 1
 21c:	01 90       	ld	r0, Z+
 21e:	0d 92       	st	X+, r0
 220:	8a 95       	dec	r24
 222:	e1 f7       	brne	.-8      	; 0x21c <display_fnd+0x1e>
 224:	e7 df       	rcall	.-50     	; 0x1f4 <get_fnd_data>
 226:	ac 01       	movw	r20, r24
 228:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <digit_position.1620>
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	59 f1       	breq	.+86     	; 0x286 <display_fnd+0x88>
 230:	38 f0       	brcs	.+14     	; 0x240 <display_fnd+0x42>
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	09 f4       	brne	.+2      	; 0x238 <display_fnd+0x3a>
 236:	53 c0       	rjmp	.+166    	; 0x2de <display_fnd+0xe0>
 238:	83 30       	cpi	r24, 0x03	; 3
 23a:	09 f4       	brne	.+2      	; 0x23e <display_fnd+0x40>
 23c:	7e c0       	rjmp	.+252    	; 0x33a <display_fnd+0x13c>
 23e:	aa c0       	rjmp	.+340    	; 0x394 <display_fnd+0x196>
 240:	8f e7       	ldi	r24, 0x7F	; 127
 242:	88 bb       	out	0x18, r24	; 24
 244:	9a 01       	movw	r18, r20
 246:	ad ec       	ldi	r26, 0xCD	; 205
 248:	bc ec       	ldi	r27, 0xCC	; 204
 24a:	4c d3       	rcall	.+1688   	; 0x8e4 <__umulhisi3>
 24c:	96 95       	lsr	r25
 24e:	87 95       	ror	r24
 250:	96 95       	lsr	r25
 252:	87 95       	ror	r24
 254:	96 95       	lsr	r25
 256:	87 95       	ror	r24
 258:	9c 01       	movw	r18, r24
 25a:	22 0f       	add	r18, r18
 25c:	33 1f       	adc	r19, r19
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	82 0f       	add	r24, r18
 26c:	93 1f       	adc	r25, r19
 26e:	9a 01       	movw	r18, r20
 270:	28 1b       	sub	r18, r24
 272:	39 0b       	sbc	r19, r25
 274:	e1 e0       	ldi	r30, 0x01	; 1
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	ec 0f       	add	r30, r28
 27a:	fd 1f       	adc	r31, r29
 27c:	e2 0f       	add	r30, r18
 27e:	f3 1f       	adc	r31, r19
 280:	80 81       	ld	r24, Z
 282:	85 bb       	out	0x15, r24	; 21
 284:	87 c0       	rjmp	.+270    	; 0x394 <display_fnd+0x196>
 286:	8f eb       	ldi	r24, 0xBF	; 191
 288:	88 bb       	out	0x18, r24	; 24
 28a:	9a 01       	movw	r18, r20
 28c:	ad ec       	ldi	r26, 0xCD	; 205
 28e:	bc ec       	ldi	r27, 0xCC	; 204
 290:	29 d3       	rcall	.+1618   	; 0x8e4 <__umulhisi3>
 292:	ac 01       	movw	r20, r24
 294:	56 95       	lsr	r21
 296:	47 95       	ror	r20
 298:	56 95       	lsr	r21
 29a:	47 95       	ror	r20
 29c:	56 95       	lsr	r21
 29e:	47 95       	ror	r20
 2a0:	9a 01       	movw	r18, r20
 2a2:	20 d3       	rcall	.+1600   	; 0x8e4 <__umulhisi3>
 2a4:	96 95       	lsr	r25
 2a6:	87 95       	ror	r24
 2a8:	96 95       	lsr	r25
 2aa:	87 95       	ror	r24
 2ac:	96 95       	lsr	r25
 2ae:	87 95       	ror	r24
 2b0:	9c 01       	movw	r18, r24
 2b2:	22 0f       	add	r18, r18
 2b4:	33 1f       	adc	r19, r19
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	82 0f       	add	r24, r18
 2c4:	93 1f       	adc	r25, r19
 2c6:	9a 01       	movw	r18, r20
 2c8:	28 1b       	sub	r18, r24
 2ca:	39 0b       	sbc	r19, r25
 2cc:	e1 e0       	ldi	r30, 0x01	; 1
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	ec 0f       	add	r30, r28
 2d2:	fd 1f       	adc	r31, r29
 2d4:	e2 0f       	add	r30, r18
 2d6:	f3 1f       	adc	r31, r19
 2d8:	80 81       	ld	r24, Z
 2da:	85 bb       	out	0x15, r24	; 21
 2dc:	5b c0       	rjmp	.+182    	; 0x394 <display_fnd+0x196>
 2de:	8f ed       	ldi	r24, 0xDF	; 223
 2e0:	88 bb       	out	0x18, r24	; 24
 2e2:	9a 01       	movw	r18, r20
 2e4:	36 95       	lsr	r19
 2e6:	27 95       	ror	r18
 2e8:	36 95       	lsr	r19
 2ea:	27 95       	ror	r18
 2ec:	ab e7       	ldi	r26, 0x7B	; 123
 2ee:	b4 e1       	ldi	r27, 0x14	; 20
 2f0:	f9 d2       	rcall	.+1522   	; 0x8e4 <__umulhisi3>
 2f2:	ac 01       	movw	r20, r24
 2f4:	56 95       	lsr	r21
 2f6:	47 95       	ror	r20
 2f8:	9a 01       	movw	r18, r20
 2fa:	ad ec       	ldi	r26, 0xCD	; 205
 2fc:	bc ec       	ldi	r27, 0xCC	; 204
 2fe:	f2 d2       	rcall	.+1508   	; 0x8e4 <__umulhisi3>
 300:	96 95       	lsr	r25
 302:	87 95       	ror	r24
 304:	96 95       	lsr	r25
 306:	87 95       	ror	r24
 308:	96 95       	lsr	r25
 30a:	87 95       	ror	r24
 30c:	9c 01       	movw	r18, r24
 30e:	22 0f       	add	r18, r18
 310:	33 1f       	adc	r19, r19
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	88 0f       	add	r24, r24
 31c:	99 1f       	adc	r25, r25
 31e:	82 0f       	add	r24, r18
 320:	93 1f       	adc	r25, r19
 322:	9a 01       	movw	r18, r20
 324:	28 1b       	sub	r18, r24
 326:	39 0b       	sbc	r19, r25
 328:	e1 e0       	ldi	r30, 0x01	; 1
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	ec 0f       	add	r30, r28
 32e:	fd 1f       	adc	r31, r29
 330:	e2 0f       	add	r30, r18
 332:	f3 1f       	adc	r31, r19
 334:	80 81       	ld	r24, Z
 336:	85 bb       	out	0x15, r24	; 21
 338:	2d c0       	rjmp	.+90     	; 0x394 <display_fnd+0x196>
 33a:	8f ee       	ldi	r24, 0xEF	; 239
 33c:	88 bb       	out	0x18, r24	; 24
 33e:	9a 01       	movw	r18, r20
 340:	36 95       	lsr	r19
 342:	27 95       	ror	r18
 344:	36 95       	lsr	r19
 346:	27 95       	ror	r18
 348:	36 95       	lsr	r19
 34a:	27 95       	ror	r18
 34c:	a5 ec       	ldi	r26, 0xC5	; 197
 34e:	b0 e2       	ldi	r27, 0x20	; 32
 350:	c9 d2       	rcall	.+1426   	; 0x8e4 <__umulhisi3>
 352:	ac 01       	movw	r20, r24
 354:	52 95       	swap	r21
 356:	42 95       	swap	r20
 358:	4f 70       	andi	r20, 0x0F	; 15
 35a:	45 27       	eor	r20, r21
 35c:	5f 70       	andi	r21, 0x0F	; 15
 35e:	45 27       	eor	r20, r21
 360:	9a 01       	movw	r18, r20
 362:	ab ea       	ldi	r26, 0xAB	; 171
 364:	ba ea       	ldi	r27, 0xAA	; 170
 366:	be d2       	rcall	.+1404   	; 0x8e4 <__umulhisi3>
 368:	96 95       	lsr	r25
 36a:	87 95       	ror	r24
 36c:	96 95       	lsr	r25
 36e:	87 95       	ror	r24
 370:	9c 01       	movw	r18, r24
 372:	22 0f       	add	r18, r18
 374:	33 1f       	adc	r19, r19
 376:	82 0f       	add	r24, r18
 378:	93 1f       	adc	r25, r19
 37a:	88 0f       	add	r24, r24
 37c:	99 1f       	adc	r25, r25
 37e:	9a 01       	movw	r18, r20
 380:	28 1b       	sub	r18, r24
 382:	39 0b       	sbc	r19, r25
 384:	e1 e0       	ldi	r30, 0x01	; 1
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	ec 0f       	add	r30, r28
 38a:	fd 1f       	adc	r31, r29
 38c:	e2 0f       	add	r30, r18
 38e:	f3 1f       	adc	r31, r19
 390:	80 81       	ld	r24, Z
 392:	85 bb       	out	0x15, r24	; 21
 394:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <digit_position.1620>
 398:	8f 5f       	subi	r24, 0xFF	; 255
 39a:	83 70       	andi	r24, 0x03	; 3
 39c:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <digit_position.1620>
 3a0:	2a 96       	adiw	r28, 0x0a	; 10
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	df 91       	pop	r29
 3ae:	cf 91       	pop	r28
 3b0:	08 95       	ret

000003b2 <init_fnd>:
 3b2:	9f ef       	ldi	r25, 0xFF	; 255
 3b4:	94 bb       	out	0x14, r25	; 20
 3b6:	87 b3       	in	r24, 0x17	; 23
 3b8:	80 6f       	ori	r24, 0xF0	; 240
 3ba:	87 bb       	out	0x17, r24	; 23
 3bc:	95 bb       	out	0x15, r25	; 21
 3be:	08 95       	ret

000003c0 <init_led>:
 3c0:	8f ef       	ldi	r24, 0xFF	; 255
 3c2:	8a bb       	out	0x1a, r24	; 26
 3c4:	08 95       	ret

000003c6 <ledalltoggle>:
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <toggle>
 3ce:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <toggle+0x1>
 3d2:	23 2b       	or	r18, r19
 3d4:	11 f0       	breq	.+4      	; 0x3da <ledalltoggle+0x14>
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <toggle+0x1>
 3de:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <toggle>
 3e2:	89 2b       	or	r24, r25
 3e4:	19 f0       	breq	.+6      	; 0x3ec <ledalltoggle+0x26>
 3e6:	8f ef       	ldi	r24, 0xFF	; 255
 3e8:	8b bb       	out	0x1b, r24	; 27
 3ea:	01 c0       	rjmp	.+2      	; 0x3ee <ledalltoggle+0x28>
 3ec:	1b ba       	out	0x1b, r1	; 27
 3ee:	2f ef       	ldi	r18, 0xFF	; 255
 3f0:	85 ea       	ldi	r24, 0xA5	; 165
 3f2:	9e e0       	ldi	r25, 0x0E	; 14
 3f4:	21 50       	subi	r18, 0x01	; 1
 3f6:	80 40       	sbci	r24, 0x00	; 0
 3f8:	90 40       	sbci	r25, 0x00	; 0
 3fa:	e1 f7       	brne	.-8      	; 0x3f4 <ledalltoggle+0x2e>
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <ledalltoggle+0x38>
 3fe:	00 00       	nop
 400:	08 95       	ret

00000402 <__vector_16>:
 402:	1f 92       	push	r1
 404:	0f 92       	push	r0
 406:	0f b6       	in	r0, 0x3f	; 63
 408:	0f 92       	push	r0
 40a:	11 24       	eor	r1, r1
 40c:	0b b6       	in	r0, 0x3b	; 59
 40e:	0f 92       	push	r0
 410:	2f 93       	push	r18
 412:	3f 93       	push	r19
 414:	4f 93       	push	r20
 416:	5f 93       	push	r21
 418:	6f 93       	push	r22
 41a:	7f 93       	push	r23
 41c:	8f 93       	push	r24
 41e:	9f 93       	push	r25
 420:	af 93       	push	r26
 422:	bf 93       	push	r27
 424:	ef 93       	push	r30
 426:	ff 93       	push	r31
 428:	86 e0       	ldi	r24, 0x06	; 6
 42a:	82 bf       	out	0x32, r24	; 50
 42c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <ms_count>
 430:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <ms_count+0x1>
 434:	a0 91 4e 01 	lds	r26, 0x014E	; 0x80014e <ms_count+0x2>
 438:	b0 91 4f 01 	lds	r27, 0x014F	; 0x80014f <ms_count+0x3>
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	a1 1d       	adc	r26, r1
 440:	b1 1d       	adc	r27, r1
 442:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <ms_count>
 446:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <ms_count+0x1>
 44a:	a0 93 4e 01 	sts	0x014E, r26	; 0x80014e <ms_count+0x2>
 44e:	b0 93 4f 01 	sts	0x014F, r27	; 0x80014f <ms_count+0x3>
 452:	88 3e       	cpi	r24, 0xE8	; 232
 454:	93 40       	sbci	r25, 0x03	; 3
 456:	a1 05       	cpc	r26, r1
 458:	b1 05       	cpc	r27, r1
 45a:	e0 f0       	brcs	.+56     	; 0x494 <__vector_16+0x92>
 45c:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <ms_count>
 460:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <ms_count+0x1>
 464:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <ms_count+0x2>
 468:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <ms_count+0x3>
 46c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <sec_count>
 470:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <sec_count+0x1>
 474:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <sec_count+0x2>
 478:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <sec_count+0x3>
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	a1 1d       	adc	r26, r1
 480:	b1 1d       	adc	r27, r1
 482:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <sec_count>
 486:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <sec_count+0x1>
 48a:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <sec_count+0x2>
 48e:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <sec_count+0x3>
 492:	2a d1       	rcall	.+596    	; 0x6e8 <inc_time_sec>
 494:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <ms_count>
 498:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <ms_count+0x1>
 49c:	a0 91 4e 01 	lds	r26, 0x014E	; 0x80014e <ms_count+0x2>
 4a0:	b0 91 4f 01 	lds	r27, 0x014F	; 0x80014f <ms_count+0x3>
 4a4:	83 70       	andi	r24, 0x03	; 3
 4a6:	99 27       	eor	r25, r25
 4a8:	aa 27       	eor	r26, r26
 4aa:	bb 27       	eor	r27, r27
 4ac:	89 2b       	or	r24, r25
 4ae:	8a 2b       	or	r24, r26
 4b0:	8b 2b       	or	r24, r27
 4b2:	09 f4       	brne	.+2      	; 0x4b6 <__vector_16+0xb4>
 4b4:	a4 de       	rcall	.-696    	; 0x1fe <display_fnd>
 4b6:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <stopwatch_state>
 4ba:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <stopwatch_state+0x1>
 4be:	01 97       	sbiw	r24, 0x01	; 1
 4c0:	09 f4       	brne	.+2      	; 0x4c4 <__vector_16+0xc2>
 4c2:	71 d0       	rcall	.+226    	; 0x5a6 <inc_stopwatch_clock>
 4c4:	ff 91       	pop	r31
 4c6:	ef 91       	pop	r30
 4c8:	bf 91       	pop	r27
 4ca:	af 91       	pop	r26
 4cc:	9f 91       	pop	r25
 4ce:	8f 91       	pop	r24
 4d0:	7f 91       	pop	r23
 4d2:	6f 91       	pop	r22
 4d4:	5f 91       	pop	r21
 4d6:	4f 91       	pop	r20
 4d8:	3f 91       	pop	r19
 4da:	2f 91       	pop	r18
 4dc:	0f 90       	pop	r0
 4de:	0b be       	out	0x3b, r0	; 59
 4e0:	0f 90       	pop	r0
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	0f 90       	pop	r0
 4e6:	1f 90       	pop	r1
 4e8:	18 95       	reti

000004ea <init_timer0>:
 4ea:	86 e0       	ldi	r24, 0x06	; 6
 4ec:	82 bf       	out	0x32, r24	; 50
 4ee:	83 b7       	in	r24, 0x33	; 51
 4f0:	84 60       	ori	r24, 0x04	; 4
 4f2:	83 bf       	out	0x33, r24	; 51
 4f4:	87 b7       	in	r24, 0x37	; 55
 4f6:	81 60       	ori	r24, 0x01	; 1
 4f8:	87 bf       	out	0x37, r24	; 55
 4fa:	08 95       	ret

000004fc <main>:
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	00 d0       	rcall	.+0      	; 0x502 <main+0x6>
 502:	1f 92       	push	r1
 504:	cd b7       	in	r28, 0x3d	; 61
 506:	de b7       	in	r29, 0x3e	; 62
 508:	5b df       	rcall	.-330    	; 0x3c0 <init_led>
 50a:	53 df       	rcall	.-346    	; 0x3b2 <init_fnd>
 50c:	dd dd       	rcall	.-1094   	; 0xc8 <init_button>
 50e:	41 d1       	rcall	.+642    	; 0x792 <init_uart0>
 510:	96 d1       	rcall	.+812    	; 0x83e <init_UART1>
 512:	80 e0       	ldi	r24, 0x00	; 0
 514:	91 e0       	ldi	r25, 0x01	; 1
 516:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <__iob+0x3>
 51a:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <__iob+0x2>
 51e:	e5 df       	rcall	.-54     	; 0x4ea <init_timer0>
 520:	78 94       	sei
 522:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <mode+0x1>
 526:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <mode>
 52a:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <stopwatch_state+0x1>
 52e:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stopwatch_state>
 532:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <mode>
 536:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <mode+0x1>
 53a:	00 97       	sbiw	r24, 0x00	; 0
 53c:	19 f0       	breq	.+6      	; 0x544 <main+0x48>
 53e:	01 97       	sbiw	r24, 0x01	; 1
 540:	b9 f0       	breq	.+46     	; 0x570 <main+0x74>
 542:	2e c0       	rjmp	.+92     	; 0x5a0 <main+0xa4>
 544:	ce 01       	movw	r24, r28
 546:	01 96       	adiw	r24, 0x01	; 1
 548:	c4 d0       	rcall	.+392    	; 0x6d2 <get_time_clock>
 54a:	2a 81       	ldd	r18, Y+2	; 0x02
 54c:	8b 81       	ldd	r24, Y+3	; 0x03
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	34 e6       	ldi	r19, 0x64	; 100
 552:	23 9f       	mul	r18, r19
 554:	80 0d       	add	r24, r0
 556:	91 1d       	adc	r25, r1
 558:	11 24       	eor	r1, r1
 55a:	47 de       	rcall	.-882    	; 0x1ea <set_fnd_data>
 55c:	b9 dd       	rcall	.-1166   	; 0xd0 <get_button1>
 55e:	89 2b       	or	r24, r25
 560:	f9 f0       	breq	.+62     	; 0x5a0 <main+0xa4>
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <mode+0x1>
 56a:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <mode>
 56e:	18 c0       	rjmp	.+48     	; 0x5a0 <main+0xa4>
 570:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <stopwatch_state>
 574:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <stopwatch_state+0x1>
 578:	81 30       	cpi	r24, 0x01	; 1
 57a:	91 05       	cpc	r25, r1
 57c:	39 f0       	breq	.+14     	; 0x58c <main+0x90>
 57e:	82 30       	cpi	r24, 0x02	; 2
 580:	91 05       	cpc	r25, r1
 582:	31 f0       	breq	.+12     	; 0x590 <main+0x94>
 584:	89 2b       	or	r24, r25
 586:	29 f4       	brne	.+10     	; 0x592 <main+0x96>
 588:	6e d0       	rcall	.+220    	; 0x666 <stopwatch_stop>
 58a:	03 c0       	rjmp	.+6      	; 0x592 <main+0x96>
 58c:	5f d0       	rcall	.+190    	; 0x64c <stopwatch_run>
 58e:	01 c0       	rjmp	.+2      	; 0x592 <main+0x96>
 590:	82 d0       	rcall	.+260    	; 0x696 <stopwatch_reset>
 592:	9e dd       	rcall	.-1220   	; 0xd0 <get_button1>
 594:	89 2b       	or	r24, r25
 596:	21 f0       	breq	.+8      	; 0x5a0 <main+0xa4>
 598:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <mode+0x1>
 59c:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <mode>
 5a0:	0b d1       	rcall	.+534    	; 0x7b8 <pc_command_processing>
 5a2:	5d d1       	rcall	.+698    	; 0x85e <bt_command_processing>
 5a4:	c6 cf       	rjmp	.-116    	; 0x532 <main+0x36>

000005a6 <inc_stopwatch_clock>:
 5a6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <count>
 5aa:	8f 5f       	subi	r24, 0xFF	; 255
 5ac:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <count>
 5b0:	84 36       	cpi	r24, 0x64	; 100
 5b2:	78 f1       	brcs	.+94     	; 0x612 <inc_stopwatch_clock+0x6c>
 5b4:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <count>
 5b8:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <stopwatchclock_sec>
 5bc:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <stopwatchclock_sec+0x1>
 5c0:	01 96       	adiw	r24, 0x01	; 1
 5c2:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <stopwatchclock_sec+0x1>
 5c6:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <stopwatchclock_sec>
 5ca:	cc 97       	sbiw	r24, 0x3c	; 60
 5cc:	14 f1       	brlt	.+68     	; 0x612 <inc_stopwatch_clock+0x6c>
 5ce:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <stopwatchclock_sec+0x1>
 5d2:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <stopwatchclock_sec>
 5d6:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <stopwatchclock_min>
 5da:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <stopwatchclock_min+0x1>
 5de:	01 96       	adiw	r24, 0x01	; 1
 5e0:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <stopwatchclock_min+0x1>
 5e4:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <stopwatchclock_min>
 5e8:	cc 97       	sbiw	r24, 0x3c	; 60
 5ea:	9c f0       	brlt	.+38     	; 0x612 <inc_stopwatch_clock+0x6c>
 5ec:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <stopwatchclock_min+0x1>
 5f0:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <stopwatchclock_min>
 5f4:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <stopwatchclock_hour>
 5f8:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <stopwatchclock_hour+0x1>
 5fc:	01 96       	adiw	r24, 0x01	; 1
 5fe:	90 93 56 01 	sts	0x0156, r25	; 0x800156 <stopwatchclock_hour+0x1>
 602:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <stopwatchclock_hour>
 606:	48 97       	sbiw	r24, 0x18	; 24
 608:	24 f0       	brlt	.+8      	; 0x612 <inc_stopwatch_clock+0x6c>
 60a:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <stopwatchclock_hour+0x1>
 60e:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <stopwatchclock_hour>
 612:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <stopwatchclock_min>
 616:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <stopwatchclock_min+0x1>
 61a:	44 e6       	ldi	r20, 0x64	; 100
 61c:	48 9f       	mul	r20, r24
 61e:	90 01       	movw	r18, r0
 620:	49 9f       	mul	r20, r25
 622:	30 0d       	add	r19, r0
 624:	11 24       	eor	r1, r1
 626:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <stopwatchclock_sec>
 62a:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <stopwatchclock_sec+0x1>
 62e:	82 0f       	add	r24, r18
 630:	93 1f       	adc	r25, r19
 632:	09 2e       	mov	r0, r25
 634:	00 0c       	add	r0, r0
 636:	aa 0b       	sbc	r26, r26
 638:	bb 0b       	sbc	r27, r27
 63a:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <stopwatchclock>
 63e:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <stopwatchclock+0x1>
 642:	a0 93 59 01 	sts	0x0159, r26	; 0x800159 <stopwatchclock+0x2>
 646:	b0 93 5a 01 	sts	0x015A, r27	; 0x80015a <stopwatchclock+0x3>
 64a:	08 95       	ret

0000064c <stopwatch_run>:
 64c:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <stopwatchclock>
 650:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <stopwatchclock+0x1>
 654:	ca dd       	rcall	.-1132   	; 0x1ea <set_fnd_data>
 656:	6b dd       	rcall	.-1322   	; 0x12e <get_button2>
 658:	89 2b       	or	r24, r25
 65a:	21 f0       	breq	.+8      	; 0x664 <stopwatch_run+0x18>
 65c:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <stopwatch_state+0x1>
 660:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stopwatch_state>
 664:	08 95       	ret

00000666 <stopwatch_stop>:
 666:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <stopwatchclock>
 66a:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <stopwatchclock+0x1>
 66e:	bd dd       	rcall	.-1158   	; 0x1ea <set_fnd_data>
 670:	5e dd       	rcall	.-1348   	; 0x12e <get_button2>
 672:	89 2b       	or	r24, r25
 674:	31 f0       	breq	.+12     	; 0x682 <stopwatch_stop+0x1c>
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <stopwatch_state+0x1>
 67e:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <stopwatch_state>
 682:	84 dd       	rcall	.-1272   	; 0x18c <get_button3>
 684:	89 2b       	or	r24, r25
 686:	31 f0       	breq	.+12     	; 0x694 <stopwatch_stop+0x2e>
 688:	82 e0       	ldi	r24, 0x02	; 2
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <stopwatch_state+0x1>
 690:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <stopwatch_state>
 694:	08 95       	ret

00000696 <stopwatch_reset>:
 696:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <stopwatchclock>
 69a:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <stopwatchclock+0x1>
 69e:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <stopwatchclock+0x2>
 6a2:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <stopwatchclock+0x3>
 6a6:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <stopwatchclock_hour+0x1>
 6aa:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <stopwatchclock_hour>
 6ae:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <stopwatchclock_min+0x1>
 6b2:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <stopwatchclock_min>
 6b6:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <stopwatchclock_sec+0x1>
 6ba:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <stopwatchclock_sec>
 6be:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <count>
 6c2:	80 e0       	ldi	r24, 0x00	; 0
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	91 dd       	rcall	.-1246   	; 0x1ea <set_fnd_data>
 6c8:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <stopwatch_state+0x1>
 6cc:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stopwatch_state>
 6d0:	08 95       	ret

000006d2 <get_time_clock>:
 6d2:	20 91 5d 01 	lds	r18, 0x015D	; 0x80015d <time_clock>
 6d6:	30 91 5e 01 	lds	r19, 0x015E	; 0x80015e <time_clock+0x1>
 6da:	40 91 5f 01 	lds	r20, 0x015F	; 0x80015f <time_clock+0x2>
 6de:	fc 01       	movw	r30, r24
 6e0:	20 83       	st	Z, r18
 6e2:	31 83       	std	Z+1, r19	; 0x01
 6e4:	42 83       	std	Z+2, r20	; 0x02
 6e6:	08 95       	ret

000006e8 <inc_time_sec>:
 6e8:	ed e5       	ldi	r30, 0x5D	; 93
 6ea:	f1 e0       	ldi	r31, 0x01	; 1
 6ec:	82 81       	ldd	r24, Z+2	; 0x02
 6ee:	8f 5f       	subi	r24, 0xFF	; 255
 6f0:	82 83       	std	Z+2, r24	; 0x02
 6f2:	8c 33       	cpi	r24, 0x3C	; 60
 6f4:	70 f0       	brcs	.+28     	; 0x712 <inc_time_sec+0x2a>
 6f6:	12 82       	std	Z+2, r1	; 0x02
 6f8:	81 81       	ldd	r24, Z+1	; 0x01
 6fa:	8f 5f       	subi	r24, 0xFF	; 255
 6fc:	81 83       	std	Z+1, r24	; 0x01
 6fe:	8c 33       	cpi	r24, 0x3C	; 60
 700:	40 f0       	brcs	.+16     	; 0x712 <inc_time_sec+0x2a>
 702:	11 82       	std	Z+1, r1	; 0x01
 704:	80 81       	ld	r24, Z
 706:	8f 5f       	subi	r24, 0xFF	; 255
 708:	80 83       	st	Z, r24
 70a:	88 31       	cpi	r24, 0x18	; 24
 70c:	10 f0       	brcs	.+4      	; 0x712 <inc_time_sec+0x2a>
 70e:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <time_clock>
 712:	08 95       	ret

00000714 <__vector_18>:
#include <avr/interrupt.h>
#include <string.h>  // strncmp, strcpy 등등 
#include "uart0.h"
 
ISR(USART0_RX_vect)
{
 714:	1f 92       	push	r1
 716:	0f 92       	push	r0
 718:	0f b6       	in	r0, 0x3f	; 63
 71a:	0f 92       	push	r0
 71c:	11 24       	eor	r1, r1
 71e:	0b b6       	in	r0, 0x3b	; 59
 720:	0f 92       	push	r0
 722:	2f 93       	push	r18
 724:	3f 93       	push	r19
 726:	4f 93       	push	r20
 728:	5f 93       	push	r21
 72a:	8f 93       	push	r24
 72c:	ef 93       	push	r30
 72e:	ff 93       	push	r31
	unsigned char data;
	
	data = UDR0; // uart0의 HW register(UDR0)로 1 byte를 읽어 들인다.
 730:	8c b1       	in	r24, 0x0c	; 12
	if (data == '\r' || data == '\n')   // 문장의 끝 이면 
 732:	8d 30       	cpi	r24, 0x0D	; 13
 734:	11 f0       	breq	.+4      	; 0x73a <__vector_18+0x26>
 736:	8a 30       	cpi	r24, 0x0A	; 10
 738:	79 f4       	brne	.+30     	; 0x758 <__vector_18+0x44>
	{
		rx_buff[i] = '\0';   // 문장의 끝을 가리키는 NULL
 73a:	e0 91 60 01 	lds	r30, 0x0160	; 0x800160 <i>
 73e:	f0 91 61 01 	lds	r31, 0x0161	; 0x800161 <i+0x1>
 742:	e8 55       	subi	r30, 0x58	; 88
 744:	fe 4f       	sbci	r31, 0xFE	; 254
 746:	10 82       	st	Z, r1
		i=0;     // 개선점 : circular queue (환형큐)로 개선을 해야 한다. 
 748:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <i+0x1>
 74c:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <i>
		         // 이렇게 짜면 새로운 메세지가 오면 덮어 쓴다.
		rx_ready_flag=1;  // 완전한 문장이 들어 왔을때 1로 set된다
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <rx_ready_flag>
 756:	0f c0       	rjmp	.+30     	; 0x776 <__vector_18+0x62>
	}
	else
	{
		rx_buff[i++] = data;  // 1. rx_buff[i] = data  2. i++
 758:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <i>
 75c:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <i+0x1>
 760:	a9 01       	movw	r20, r18
 762:	4f 5f       	subi	r20, 0xFF	; 255
 764:	5f 4f       	sbci	r21, 0xFF	; 255
 766:	50 93 61 01 	sts	0x0161, r21	; 0x800161 <i+0x1>
 76a:	40 93 60 01 	sts	0x0160, r20	; 0x800160 <i>
 76e:	f9 01       	movw	r30, r18
 770:	e8 55       	subi	r30, 0x58	; 88
 772:	fe 4f       	sbci	r31, 0xFE	; 254
 774:	80 83       	st	Z, r24
	}
}
 776:	ff 91       	pop	r31
 778:	ef 91       	pop	r30
 77a:	8f 91       	pop	r24
 77c:	5f 91       	pop	r21
 77e:	4f 91       	pop	r20
 780:	3f 91       	pop	r19
 782:	2f 91       	pop	r18
 784:	0f 90       	pop	r0
 786:	0b be       	out	0x3b, r0	; 59
 788:	0f 90       	pop	r0
 78a:	0f be       	out	0x3f, r0	; 63
 78c:	0f 90       	pop	r0
 78e:	1f 90       	pop	r1
 790:	18 95       	reti

00000792 <init_uart0>:
// 1. 전송속도: 9600bps : 총 byte(글자) 수: 9600 / 10 ==> 960자 (1글자 송.수신 소요 시간 : 약 1ms)
// 2. 비동기식, data 8bit, none parity
// 3. RX(수신) Interrupt 활성화 
void init_uart0(void)
{
	UBRR0H = 0x00;
 792:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 207;  // 9600bps  p219 표9-9
 796:	8f ec       	ldi	r24, 0xCF	; 207
 798:	89 b9       	out	0x09, r24	; 9
	
	UCSR0A |= (1 << U2X0);   // 2배속 통신 
 79a:	8b b1       	in	r24, 0x0b	; 11
 79c:	82 60       	ori	r24, 0x02	; 2
 79e:	8b b9       	out	0x0b, r24	; 11
	UCSR0C |= 0x06;  // ASYNC(비동기) data 8 bit, none parity
 7a0:	e5 e9       	ldi	r30, 0x95	; 149
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	86 60       	ori	r24, 0x06	; 6
 7a8:	80 83       	st	Z, r24
	
	// RXEN0 : UART0로부터 수신이 가능 하도록 설정
	// TXEN0 : UART0로부터 송신이 가능 하도록 설정
	// RXCIE0 : UART0로 부터 1 byte가 들어 오면 rx(수신) interrupt를 띄어 달라 
	UCSR0B = (1 << RXEN0) | (1 << TXEN0) | (1 << RXCIE0);
 7aa:	88 e9       	ldi	r24, 0x98	; 152
 7ac:	8a b9       	out	0x0a, r24	; 10
 7ae:	08 95       	ret

000007b0 <UART0_transmit>:
}

// UART0로 1 byte를 보내는 함수
void UART0_transmit(uint8_t data)
{
	while ( !(UCSR0A & (1 << UDRE0)))  // data가 전송 중이면 data가 다 전송될떄 까지 기다린다.
 7b0:	5d 9b       	sbis	0x0b, 5	; 11
 7b2:	fe cf       	rjmp	.-4      	; 0x7b0 <UART0_transmit>
		;    // no operation ㅣ 아무 action도 취하지 않는다. 
	UDR0 = data;   // HW 전송 register에 data를 쏴준다. 
 7b4:	8c b9       	out	0x0c, r24	; 12
 7b6:	08 95       	ret

000007b8 <pc_command_processing>:
// ledalloff
// ledalltoggle : 300ms 주기로 led전체를 on/off 반복 한다.
extern int led_command;  // nothing 
void pc_command_processing()
{
	if (rx_ready_flag)  // if (rx_ready_flag >= 1)
 7b8:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <rx_ready_flag>
 7bc:	88 23       	and	r24, r24
 7be:	b9 f1       	breq	.+110    	; 0x82e <pc_command_processing+0x76>
	{
		rx_ready_flag=0;
 7c0:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <rx_ready_flag>
		printf("%s\n", rx_buff);
 7c4:	88 ea       	ldi	r24, 0xA8	; 168
 7c6:	91 e0       	ldi	r25, 0x01	; 1
 7c8:	aa d0       	rcall	.+340    	; 0x91e <puts>
		if (strncmp(rx_buff, "ledallon", strlen("ledallon")-1) == 0)
 7ca:	47 e0       	ldi	r20, 0x07	; 7
 7cc:	50 e0       	ldi	r21, 0x00	; 0
 7ce:	68 e1       	ldi	r22, 0x18	; 24
 7d0:	71 e0       	ldi	r23, 0x01	; 1
 7d2:	88 ea       	ldi	r24, 0xA8	; 168
 7d4:	91 e0       	ldi	r25, 0x01	; 1
 7d6:	95 d0       	rcall	.+298    	; 0x902 <strncmp>
 7d8:	89 2b       	or	r24, r25
 7da:	11 f4       	brne	.+4      	; 0x7e0 <pc_command_processing+0x28>
			PORTA = 0xff;
 7dc:	8f ef       	ldi	r24, 0xFF	; 255
 7de:	8b bb       	out	0x1b, r24	; 27
		if (strncmp(rx_buff, "ledalloff", strlen("ledalloff")-1) == 0)
 7e0:	48 e0       	ldi	r20, 0x08	; 8
 7e2:	50 e0       	ldi	r21, 0x00	; 0
 7e4:	61 e2       	ldi	r22, 0x21	; 33
 7e6:	71 e0       	ldi	r23, 0x01	; 1
 7e8:	88 ea       	ldi	r24, 0xA8	; 168
 7ea:	91 e0       	ldi	r25, 0x01	; 1
 7ec:	8a d0       	rcall	.+276    	; 0x902 <strncmp>
 7ee:	89 2b       	or	r24, r25
 7f0:	09 f4       	brne	.+2      	; 0x7f4 <pc_command_processing+0x3c>
			PORTA = 0x00;
 7f2:	1b ba       	out	0x1b, r1	; 27
		if (strncmp(rx_buff, "reset", strlen("reset")-1) == 0)
 7f4:	44 e0       	ldi	r20, 0x04	; 4
 7f6:	50 e0       	ldi	r21, 0x00	; 0
 7f8:	6b e2       	ldi	r22, 0x2B	; 43
 7fa:	71 e0       	ldi	r23, 0x01	; 1
 7fc:	88 ea       	ldi	r24, 0xA8	; 168
 7fe:	91 e0       	ldi	r25, 0x01	; 1
 800:	80 d0       	rcall	.+256    	; 0x902 <strncmp>
 802:	89 2b       	or	r24, r25
 804:	29 f4       	brne	.+10     	; 0x810 <pc_command_processing+0x58>
		{
			PORTA = 0x00;
 806:	1b ba       	out	0x1b, r1	; 27
			led_command=0;
 808:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <led_command+0x1>
 80c:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <led_command>
		}
		if (strncmp(rx_buff, "ledalltoggle", strlen("ledalltoggle")-1) == 0)
 810:	4b e0       	ldi	r20, 0x0B	; 11
 812:	50 e0       	ldi	r21, 0x00	; 0
 814:	61 e3       	ldi	r22, 0x31	; 49
 816:	71 e0       	ldi	r23, 0x01	; 1
 818:	88 ea       	ldi	r24, 0xA8	; 168
 81a:	91 e0       	ldi	r25, 0x01	; 1
 81c:	72 d0       	rcall	.+228    	; 0x902 <strncmp>
 81e:	89 2b       	or	r24, r25
 820:	31 f4       	brne	.+12     	; 0x82e <pc_command_processing+0x76>
			led_command=1;   	
 822:	81 e0       	ldi	r24, 0x01	; 1
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <led_command+0x1>
 82a:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <led_command>
	}	
	switch(led_command)
 82e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <led_command>
 832:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <led_command+0x1>
 836:	01 97       	sbiw	r24, 0x01	; 1
	{
		case 1:
		ledalltoggle();
 838:	09 f4       	brne	.+2      	; 0x83c <pc_command_processing+0x84>
 83a:	c5 cd       	rjmp	.-1142   	; 0x3c6 <ledalltoggle>
 83c:	08 95       	ret

0000083e <init_UART1>:
 83e:	ea e9       	ldi	r30, 0x9A	; 154
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	80 81       	ld	r24, Z
 844:	88 69       	ori	r24, 0x98	; 152
 846:	80 83       	st	Z, r24
 848:	eb e9       	ldi	r30, 0x9B	; 155
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	80 81       	ld	r24, Z
 84e:	82 60       	ori	r24, 0x02	; 2
 850:	80 83       	st	Z, r24
 852:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 856:	8f ec       	ldi	r24, 0xCF	; 207
 858:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 85c:	08 95       	ret

0000085e <bt_command_processing>:
 85e:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <rx1ReadyFlag>
 862:	88 23       	and	r24, r24
 864:	b9 f1       	breq	.+110    	; 0x8d4 <bt_command_processing+0x76>
 866:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <rx1ReadyFlag>
 86a:	84 e6       	ldi	r24, 0x64	; 100
 86c:	91 e0       	ldi	r25, 0x01	; 1
 86e:	57 d0       	rcall	.+174    	; 0x91e <puts>
 870:	47 e0       	ldi	r20, 0x07	; 7
 872:	50 e0       	ldi	r21, 0x00	; 0
 874:	68 e1       	ldi	r22, 0x18	; 24
 876:	71 e0       	ldi	r23, 0x01	; 1
 878:	84 e6       	ldi	r24, 0x64	; 100
 87a:	91 e0       	ldi	r25, 0x01	; 1
 87c:	42 d0       	rcall	.+132    	; 0x902 <strncmp>
 87e:	89 2b       	or	r24, r25
 880:	11 f4       	brne	.+4      	; 0x886 <bt_command_processing+0x28>
 882:	8f ef       	ldi	r24, 0xFF	; 255
 884:	8b bb       	out	0x1b, r24	; 27
 886:	48 e0       	ldi	r20, 0x08	; 8
 888:	50 e0       	ldi	r21, 0x00	; 0
 88a:	61 e2       	ldi	r22, 0x21	; 33
 88c:	71 e0       	ldi	r23, 0x01	; 1
 88e:	84 e6       	ldi	r24, 0x64	; 100
 890:	91 e0       	ldi	r25, 0x01	; 1
 892:	37 d0       	rcall	.+110    	; 0x902 <strncmp>
 894:	89 2b       	or	r24, r25
 896:	09 f4       	brne	.+2      	; 0x89a <bt_command_processing+0x3c>
 898:	1b ba       	out	0x1b, r1	; 27
 89a:	44 e0       	ldi	r20, 0x04	; 4
 89c:	50 e0       	ldi	r21, 0x00	; 0
 89e:	6b e2       	ldi	r22, 0x2B	; 43
 8a0:	71 e0       	ldi	r23, 0x01	; 1
 8a2:	84 e6       	ldi	r24, 0x64	; 100
 8a4:	91 e0       	ldi	r25, 0x01	; 1
 8a6:	2d d0       	rcall	.+90     	; 0x902 <strncmp>
 8a8:	89 2b       	or	r24, r25
 8aa:	29 f4       	brne	.+10     	; 0x8b6 <bt_command_processing+0x58>
 8ac:	1b ba       	out	0x1b, r1	; 27
 8ae:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <led_command+0x1>
 8b2:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <led_command>
 8b6:	4b e0       	ldi	r20, 0x0B	; 11
 8b8:	50 e0       	ldi	r21, 0x00	; 0
 8ba:	61 e3       	ldi	r22, 0x31	; 49
 8bc:	71 e0       	ldi	r23, 0x01	; 1
 8be:	84 e6       	ldi	r24, 0x64	; 100
 8c0:	91 e0       	ldi	r25, 0x01	; 1
 8c2:	1f d0       	rcall	.+62     	; 0x902 <strncmp>
 8c4:	89 2b       	or	r24, r25
 8c6:	31 f4       	brne	.+12     	; 0x8d4 <bt_command_processing+0x76>
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <led_command+0x1>
 8d0:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <led_command>
 8d4:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <led_command>
 8d8:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <led_command+0x1>
 8dc:	01 97       	sbiw	r24, 0x01	; 1
 8de:	09 f4       	brne	.+2      	; 0x8e2 <bt_command_processing+0x84>
 8e0:	72 cd       	rjmp	.-1308   	; 0x3c6 <ledalltoggle>
 8e2:	08 95       	ret

000008e4 <__umulhisi3>:
 8e4:	a2 9f       	mul	r26, r18
 8e6:	b0 01       	movw	r22, r0
 8e8:	b3 9f       	mul	r27, r19
 8ea:	c0 01       	movw	r24, r0
 8ec:	a3 9f       	mul	r26, r19
 8ee:	70 0d       	add	r23, r0
 8f0:	81 1d       	adc	r24, r1
 8f2:	11 24       	eor	r1, r1
 8f4:	91 1d       	adc	r25, r1
 8f6:	b2 9f       	mul	r27, r18
 8f8:	70 0d       	add	r23, r0
 8fa:	81 1d       	adc	r24, r1
 8fc:	11 24       	eor	r1, r1
 8fe:	91 1d       	adc	r25, r1
 900:	08 95       	ret

00000902 <strncmp>:
 902:	fb 01       	movw	r30, r22
 904:	dc 01       	movw	r26, r24
 906:	41 50       	subi	r20, 0x01	; 1
 908:	50 40       	sbci	r21, 0x00	; 0
 90a:	30 f0       	brcs	.+12     	; 0x918 <strncmp+0x16>
 90c:	8d 91       	ld	r24, X+
 90e:	01 90       	ld	r0, Z+
 910:	80 19       	sub	r24, r0
 912:	19 f4       	brne	.+6      	; 0x91a <strncmp+0x18>
 914:	00 20       	and	r0, r0
 916:	b9 f7       	brne	.-18     	; 0x906 <strncmp+0x4>
 918:	88 1b       	sub	r24, r24
 91a:	99 0b       	sbc	r25, r25
 91c:	08 95       	ret

0000091e <puts>:
 91e:	0f 93       	push	r16
 920:	1f 93       	push	r17
 922:	cf 93       	push	r28
 924:	df 93       	push	r29
 926:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <__iob+0x2>
 92a:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <__iob+0x3>
 92e:	23 81       	ldd	r18, Z+3	; 0x03
 930:	21 ff       	sbrs	r18, 1
 932:	1b c0       	rjmp	.+54     	; 0x96a <puts+0x4c>
 934:	8c 01       	movw	r16, r24
 936:	d0 e0       	ldi	r29, 0x00	; 0
 938:	c0 e0       	ldi	r28, 0x00	; 0
 93a:	f8 01       	movw	r30, r16
 93c:	81 91       	ld	r24, Z+
 93e:	8f 01       	movw	r16, r30
 940:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <__iob+0x2>
 944:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <__iob+0x3>
 948:	db 01       	movw	r26, r22
 94a:	18 96       	adiw	r26, 0x08	; 8
 94c:	ed 91       	ld	r30, X+
 94e:	fc 91       	ld	r31, X
 950:	19 97       	sbiw	r26, 0x09	; 9
 952:	88 23       	and	r24, r24
 954:	31 f0       	breq	.+12     	; 0x962 <puts+0x44>
 956:	09 95       	icall
 958:	89 2b       	or	r24, r25
 95a:	79 f3       	breq	.-34     	; 0x93a <puts+0x1c>
 95c:	df ef       	ldi	r29, 0xFF	; 255
 95e:	cf ef       	ldi	r28, 0xFF	; 255
 960:	ec cf       	rjmp	.-40     	; 0x93a <puts+0x1c>
 962:	8a e0       	ldi	r24, 0x0A	; 10
 964:	09 95       	icall
 966:	89 2b       	or	r24, r25
 968:	19 f0       	breq	.+6      	; 0x970 <puts+0x52>
 96a:	8f ef       	ldi	r24, 0xFF	; 255
 96c:	9f ef       	ldi	r25, 0xFF	; 255
 96e:	02 c0       	rjmp	.+4      	; 0x974 <puts+0x56>
 970:	8d 2f       	mov	r24, r29
 972:	9c 2f       	mov	r25, r28
 974:	df 91       	pop	r29
 976:	cf 91       	pop	r28
 978:	1f 91       	pop	r17
 97a:	0f 91       	pop	r16
 97c:	08 95       	ret

0000097e <_exit>:
 97e:	f8 94       	cli

00000980 <__stop_program>:
 980:	ff cf       	rjmp	.-2      	; 0x980 <__stop_program>
